/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fi.helsinki.cs.nero.ui;

import fi.helsinki.cs.nero.data.Person;
import fi.helsinki.cs.nero.data.PhoneNumber;
import fi.helsinki.cs.nero.event.NeroObserver;
import fi.helsinki.cs.nero.logic.Session;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author ssinisal
 */
public class AltPhonenumberDialog extends javax.swing.JDialog
        implements ListSelectionListener, ActionListener, NeroObserver{

    private Vector allNumbersVector;
    private Vector reservedNumbersVector;
    private Person person;
    private Session session;
    /**
     * Creates new form AltPhonenumberDialog
     */
    public AltPhonenumberDialog(java.awt.Frame parent, boolean modal, Session session, Person person) {
        super(parent, modal);
        initComponents();
        
        this.person = person;
        this.session = session;
        
        allNumbersVector = new Vector();
        reservedNumbersVector = new Vector();
        
	    PhoneNumber[] numberArray = session.getAllPhoneNumbers();
	    for(int i=0; i < numberArray.length; i++){
                allNumbersVector.add(numberArray[i]);

                if (numberArray[i].getPersonID() != null) {
                    if (numberArray[i].getPersonID().equals(this.person.getPersonID())) {
                        reservedNumbersVector.add(numberArray[i]);
                    }
                }
	    }                       
            allnumbersList.setListData(allNumbersVector);                //allnumbersList.getParent().
            allnumbersList.setFixedCellHeight(20);
            allnumbersList.setFixedCellWidth(15);
            allnumbersList.addListSelectionListener(this);

            //hae henkilolle varatut puhelimet
            reservednumbersList.setListData(reservedNumbersVector);
            reservednumbersList.setFixedCellHeight(20);
            reservednumbersList.setFixedCellWidth(15);
            reservednumbersList.addListSelectionListener(this);

           
            //phonenumberPane.add(allnumbersList);
                
            this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personnamePane = new javax.swing.JScrollPane();
        reservednumbersList = new javax.swing.JList();
        varaaButton = new javax.swing.JButton();
        vapautaButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        allnumbersPane = new javax.swing.JScrollPane();
        allnumbersList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setForeground(java.awt.Color.white);
        setIconImage(null);

        personnamePane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        reservednumbersList.setFont(new java.awt.Font("Century Schoolbook L", 1, 13)); // NOI18N
        reservednumbersList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        personnamePane.setViewportView(reservednumbersList);

        varaaButton.setText("Varaa ->");
        varaaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varaaButtonActionPerformed(evt);
            }
        });

        vapautaButton.setText("<- Vapauta");
        vapautaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vapautaButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel1.setText("Puhelinnumerot");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel2.setText("Varattu numero");

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        allnumbersList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        allnumbersList.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        allnumbersList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        allnumbersPane.setViewportView(allnumbersList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(allnumbersPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vapautaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varaaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(personnamePane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(allnumbersPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(varaaButton)
                        .addGap(18, 18, 18)
                        .addComponent(vapautaButton)
                        .addGap(59, 59, 59)
                        .addComponent(okButton))
                    .addComponent(personnamePane))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void varaaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varaaButtonActionPerformed
     
        
        if(allnumbersList.getSelectedValue()!=null){
            if (reservedNumbersVector.size() < 1) {
            PhoneNumber p = (PhoneNumber)allnumbersList.getSelectedValue();
        
            session.addPhoneNumber(null, p, this.person.getPersonID());

            //tyhjennetään vektorit
            allNumbersVector.removeAllElements();
            reservedNumbersVector.removeAllElements();

            //päivitetään kaikki tiedot sessiolta (eli kannasta asti)
            PhoneNumber[] numberArray = session.getAllPhoneNumbers();
	    for(int i=0; i < numberArray.length; i++){
                this.allNumbersVector.add(numberArray[i]);

                if (numberArray[i].getPersonID() != null) {
                    if (numberArray[i].getPersonID().equals(this.person.getPersonID())) {
                        this.reservedNumbersVector.add(numberArray[i]);
                    }
                }
	    }               

            allnumbersList.setListData(allNumbersVector);				
            reservednumbersList.setListData(reservedNumbersVector);
            
            } else {
                System.out.println("vain yksi numero kerrallaan");
            }
        }         
    }//GEN-LAST:event_varaaButtonActionPerformed

    private void vapautaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vapautaButtonActionPerformed
        if(reservednumbersList.getSelectedValue()!=null){
  
            PhoneNumber p = (PhoneNumber)reservednumbersList.getSelectedValue();
        
            this.session.deletePhoneNumberFromPerson(p);

            //tyhjennetään vektorit
            allNumbersVector.removeAllElements();
            reservedNumbersVector.removeAllElements();

            //päivitetään kaikki tiedot sessiolta (eli kannasta asti)
            PhoneNumber[] numberArray = session.getAllPhoneNumbers();
	    for(int i=0; i < numberArray.length; i++){
                this.allNumbersVector.add(numberArray[i]);

                if (numberArray[i].getPersonID() != null) {
                    if (numberArray[i].getPersonID().equals(this.person.getPersonID())) {
                        this.reservedNumbersVector.add(numberArray[i]);
                    }
                }
	    }               

            allnumbersList.setListData(allNumbersVector);				
            reservednumbersList.setListData(reservedNumbersVector);
            
            } else {
                System.out.println("vain yksi numero kerrallaan");
            }
        
    }//GEN-LAST:event_vapautaButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltPhonenumberDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltPhonenumberDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltPhonenumberDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltPhonenumberDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AltPhonenumberDialog dialog = new AltPhonenumberDialog(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList allnumbersList;
    private javax.swing.JScrollPane allnumbersPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okButton;
    private javax.swing.JScrollPane personnamePane;
    private javax.swing.JList reservednumbersList;
    private javax.swing.JButton vapautaButton;
    private javax.swing.JButton varaaButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void updateObserved(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
