/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fi.helsinki.cs.nero.ui;

/**
 *
 * @author lpesola
 */
import fi.helsinki.cs.nero.data.Room;
import fi.helsinki.cs.nero.db.NeroDatabase;
import fi.helsinki.cs.nero.logic.Session;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ReportsWindow extends javax.swing.JFrame {

    private Session session;
    private ArrayList<JComponent> roomComponents;
    private ArrayList<JComponent> peopleComponents;
    private ArrayList<JComponent> lockerComponents;
    private DefaultTableModel roomTable;
    private DefaultTableModel peopleTable;
    private DefaultTableModel lockerTable;

    /**
     * Creates new form Reports
     */
    public ReportsWindow() {

        // koodia testausta varten, voi poistaa myöhemmin
        // toimiva sessio
        session = new Session();
        NeroDatabase db = new NeroDatabase(session,
                "oracle.jdbc.driver.OracleDriver",
                "jdbc:oracle:thin:@bodbacka:1521:test",
                "tk_testi", "tapaus2");
        session.setDatabase(db);
        // testikoodin loppu


        initComponents();
        initContainerData();
        initModels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        checkboxContainer = new javax.swing.JPanel();
        showPostCount = new javax.swing.JCheckBox();
        showFloor = new javax.swing.JCheckBox();
        wingDropdown = new javax.swing.JComboBox();
        floorDropdown = new javax.swing.JComboBox();
        wing = new javax.swing.JLabel();
        floor = new javax.swing.JLabel();
        showRoomName = new javax.swing.JCheckBox();
        showWing = new javax.swing.JCheckBox();
        People = new javax.swing.JRadioButton();
        Rooms = new javax.swing.JRadioButton();
        saveButton = new javax.swing.JButton();
        tableContainer = new javax.swing.JScrollPane();
        Data = new javax.swing.JTable();
        postLockers = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        showPostCount.setText("Työpisteiden lkm");
        showPostCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPostCountActionPerformed(evt);
            }
        });

        showFloor.setText("Kerros");
        showFloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFloorActionPerformed(evt);
            }
        });

        wingDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        wingDropdown.setToolTipText("");

        floorDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        wing.setText("Siipi");

        floor.setText("Kerros");

        showRoomName.setText("Huoneen nimi");
        showRoomName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRoomNameActionPerformed(evt);
            }
        });

        showWing.setText("Siipi");
        showWing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showWingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkboxContainerLayout = new javax.swing.GroupLayout(checkboxContainer);
        checkboxContainer.setLayout(checkboxContainerLayout);
        checkboxContainerLayout.setHorizontalGroup(
            checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkboxContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showFloor)
                    .addComponent(showRoomName)
                    .addComponent(showWing)
                    .addGroup(checkboxContainerLayout.createSequentialGroup()
                        .addComponent(showPostCount)
                        .addGap(112, 112, 112)
                        .addGroup(checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wing)
                            .addComponent(floor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floorDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wingDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        checkboxContainerLayout.setVerticalGroup(
            checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkboxContainerLayout.createSequentialGroup()
                .addGroup(checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showPostCount)
                    .addComponent(wingDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wing))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(checkboxContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showFloor)
                    .addComponent(floor)
                    .addComponent(floorDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(showRoomName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(showWing))
        );

        buttonGroup1.add(People);
        People.setText("Henkilöt");
        People.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PeopleMouseReleased(evt);
            }
        });

        buttonGroup1.add(Rooms);
        Rooms.setText("Huoneet");
        Rooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RoomsMouseReleased(evt);
            }
        });

        saveButton.setText("Tallenna raportti");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        Data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableContainer.setViewportView(Data);

        buttonGroup1.add(postLockers);
        postLockers.setText("Postilokerot");
        postLockers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                postLockersMouseReleased(evt);
            }
        });

        jLabel1.setText("Näkyvillä");

        jLabel2.setText("Rajaus");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addContainerGap(758, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Rooms)
                                    .addComponent(People, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(34, 34, 34))
                            .addComponent(postLockers))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)
                                .addGap(183, 183, 183)
                                .addComponent(jLabel2)
                                .addGap(205, 477, Short.MAX_VALUE))
                            .addComponent(checkboxContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableContainer)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(People)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rooms)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(postLockers))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addComponent(tableContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emptyCheckboxContainer() {
        checkboxContainer.removeAll();
        checkboxContainer.revalidate();
        checkboxContainer.repaint();
    }

    private void redrawContainer(JComponent container) {
        container.revalidate();
        container.repaint();
    }

    private void insertContents(Collection<JComponent> col, JPanel panel) {
        for (JComponent j : col) {
            panel.add(j);
        }
        panel.revalidate();
        panel.repaint();
    }
    private void showFloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showFloorActionPerformed

    private void showPostCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPostCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showPostCountActionPerformed

    private void RoomsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoomsMouseReleased
        emptyCheckboxContainer();
        insertContents(roomComponents, checkboxContainer);
        redrawContainer(checkboxContainer);
        redrawContainer(tableContainer);
        Data.setModel(roomTable);
        Room[] rooms = session.getRooms();
        for (int i = 0; i < rooms.length; i++) {
            Object[] rowData = {rooms[i].getRoomNumber(), rooms[i].getFloor()};
            roomTable.insertRow(i, rowData);
        }

    }//GEN-LAST:event_RoomsMouseReleased

    private void PeopleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PeopleMouseReleased
        emptyCheckboxContainer();
        Data.setModel(peopleTable);
    }//GEN-LAST:event_PeopleMouseReleased

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void showRoomNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRoomNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showRoomNameActionPerformed

    private void showWingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showWingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showWingActionPerformed

    private void postLockersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_postLockersMouseReleased
        emptyCheckboxContainer();
        Data.setModel(lockerTable);
    }//GEN-LAST:event_postLockersMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportsWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Data;
    private javax.swing.JRadioButton People;
    private javax.swing.JRadioButton Rooms;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel checkboxContainer;
    private javax.swing.JLabel floor;
    private javax.swing.JComboBox floorDropdown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton postLockers;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox showFloor;
    private javax.swing.JCheckBox showPostCount;
    private javax.swing.JCheckBox showRoomName;
    private javax.swing.JCheckBox showWing;
    private javax.swing.JScrollPane tableContainer;
    private javax.swing.JLabel wing;
    private javax.swing.JComboBox wingDropdown;
    // End of variables declaration//GEN-END:variables
        
    private void initContainerData() {
        
        /* Checkboxes for rooms view report*/
        roomComponents = new ArrayList<>();
        roomComponents.add(showPostCount);
        roomComponents.add(showPostCount);
        roomComponents.add(showFloor);
        roomComponents.add(showWing);
        roomComponents.add(showRoomName);
        
        /*Components for people view report*/
        peopleComponents = new ArrayList<>();
        
        /*Components for post locker report*/
        lockerComponents = new ArrayList<>();
    }

    private void initModels() {
         roomTable = new DefaultTableModel(new Object[][]{},
            new String[]{"Huoneen nro.", "Kerros"});
         peopleTable = new DefaultTableModel(new Object[][]{}, 
                 new String[]{"Nimi", "Titteli"});
         lockerTable = new DefaultTableModel(new Object[][]{},
                 new String[]{"Nimi", "Postihuone"});
         
    }
}
